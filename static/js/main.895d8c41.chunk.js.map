{"version":3,"sources":["components/TokenSearch.js","components/ChainSelect.js","actions/checkHoneypot.js","config/constants/endpoints.js","App.js","reportWebVitals.js","index.js"],"names":["Search","Input","TokenSearch","props","onStart","disabled","placeholder","allowClear","enterButton","size","onSearch","Option","Select","ChainSelect","onSelect","defaultValue","style","width","height","onChange","value","checkHoneypot","address","chain","a","console","log","fetch","res","status","notification","text","message","description","open","undefined","json","body","error","errormsg","data","Text","Typography","interpretations","doCheckHoneypot","App","useState","setChain","loading","setLoading","setStatus","tokenAddress_","then","s","chain_","className","direction","display","marginRight","flexGrow","title","bordered","backgroundColor","ExperimentOutlined","fontSize","marginBottom","color","code","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.895d8c41.chunk.js","sourcesContent":["import { Input } from \"antd\";\n\nconst { Search } = Input;\n\n// Masterchef input component that calls the injected onStart method with the masterchef address as parameter\nfunction TokenSearch(props) {\n  const { onStart, disabled } = props;\n  return (\n    <Search\n      placeholder=\"Enter Token Address\"\n      allowClear\n      enterButton=\"Start\"\n      size=\"large\"\n      onSearch={onStart}\n      disabled={disabled}\n    />\n  );\n}\n\nexport default TokenSearch;\n","import { Select } from 'antd';\n\nconst { Option } = Select;\n\nfunction ChainSelect(props) {\n    const { onSelect, disabled } = props;\n    return <Select defaultValue=\"bsc\" style={{ width: \"100%\", height:\"100%\"}} onChange={onSelect} disabled={disabled}>\n        <Option value=\"bsc\">Binance Smart Chain</Option>\n        <Option value=\"poly\">Polygon</Option>\n        <Option value=\"eth\">Ethereum</Option>\n    </Select>\n\n}\n\nexport default ChainSelect;","import { notification } from \"antd\"\nimport { HONEYPOT_API_ENDPOINT } from \"../config/constants/endpoints\"\n\nconst checkHoneypot = () => {\n    return async (address, chain) => {\n        try {\n            console.log(chain)\n            const res =await fetch(`${HONEYPOT_API_ENDPOINT}?address=${address}&chain=${chain}`)\n            if (res.status !== 200) {\n                notification.open({\n                    message: `Check failed with status ${res.status}`,\n                    description: await res.text()\n                })\n                return undefined\n            }\n            const body = await res.json()\n            return body['status']\n        } catch (e) {\n            console.error(e)\n            let errormsg = e.data\n            notification.open({\n                message: 'Check failed',\n                description: errormsg\n            })\n            return undefined\n        }\n    }\n}\nexport default checkHoneypot","export const HONEYPOT_API_ENDPOINT=\"https://honeypot.api.rugdoc.io/api/honeypotStatus.js\"","import \"./App.css\";\nimport { Card, Space, Spin, Typography } from 'antd';\nimport TokenSearch from \"./components/TokenSearch\";\nimport { useState } from \"react\";\nimport ChainSelect from \"./components/ChainSelect\";\nimport { ExperimentOutlined } from '@ant-design/icons';\nimport checkHoneypot from \"./actions/checkHoneypot\";\nconst { Text } = Typography;\nconst interpretations = {\n  \"UNKNOWN\": \"The status of this token is unknown.\", // 0, unknown\n  \"OK\": \"✅ Honey pot tests passed. Our program was able to buy and sell it succesfully.\\n This however does not guarantee that it is not a honeypot.\", // 1, no issues\n  \"NO_PAIRS\": \"⚠️ Could not find any trading pair for this token on the default router and could thus not test it.\", // 2, no pairs found\n  \"SEVERE_FEE\": \"⚠️ A severely high trading fee (over 50%) was detected when selling or buying this token.\", //  3, fee > 50%\n  \"HIGH_FEE\": \"⚠️ A high trading fee was detected when selling or buying this token.\", //  4, fee > 20%\n  \"MEDIUM_FEE\": \"⚠️ A trading fee of over 10% was detected when selling or buying this token.\", // 5, fee > 10%\n  \"APPROVE_FAILED\": \"🚨 Failed to approve the token. This is very likely a honeypot.\", // 6, approval failed\n  \"SWAP_FAILED\": \"🚨 Failed to sell the token. This is very likely a honeypot.\" // 7, swap failed\n}\n\nconst doCheckHoneypot = checkHoneypot();\n\nfunction App() {\n  const [chain, setChain] = useState(\"bsc\");\n\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(undefined);\n\n  const onStart = async (tokenAddress_) => {\n    if (\n      tokenAddress_ === undefined ||\n      chain === undefined || loading) {\n      return;\n    }\n    setLoading(true);\n    doCheckHoneypot(tokenAddress_, chain).then(s => {\n      setStatus(s);\n      setLoading(false);\n    });\n  };\n\n  const onSelect = async (chain_) => {\n    console.log(chain_);\n    setChain(chain_)\n  };\n\n  return (\n\n    <div className=\"App\">\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <div style={{ display: \"flex\" }}>\n          <div style={{ width: \"180px\", marginRight: \"5px\"}}>\n            <ChainSelect onSelect={onSelect} disabled={loading}/>\n          </div>\n          <div style={{ flexGrow: 1 }}>\n            <TokenSearch onStart={onStart} disabled={loading}/>\n          </div>\n        </div>\n        <Card title=\"Token status\" bordered={false} style={{ width: \"100%\", backgroundColor: \"transparent\" }}>\n          <ExperimentOutlined style={{ fontSize: 70, marginBottom: \"40px\" , color: '#6d84a2' }} />\n          {loading ? <div><Spin/></div> : <></>}\n          {status === undefined ?\n            <div style={{ color: '#6d84a2' }}>\n              <p>Please select a token and chain to get started...</p>\n              <p></p>\n              <p>This is an experimental service, use at your own risk and make sure to double check all contract interactions.</p>\n            </div>\n            :\n            <div>\n               <Text code style={{fontSize: \"16px\"}}>{interpretations[status]}</Text>\n            </div>\n          }\n        </Card>\n      </Space>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}